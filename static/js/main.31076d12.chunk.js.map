{"version":3,"sources":["contexts/Time.js","components/modals/AddProjectModal.js","components/modals/HelpModal.js","components/modals/SettingsModal.js","reducer/ModalReducer.js","contexts/ModalContext.js","reducer/DataReducer.js","contexts/DataContext.js","components/Header.js","components/TodoItem.js","components/modals/AddTodoModal.js","components/TaskContainer.js","components/MainContainer.js","App.js","index.js"],"names":["Time","createContext","TimeContextProvider","props","useState","time","setTime","useEffect","interval","setInterval","date","Date","h","getHours","m","getMinutes","s","getSeconds","session","today","toLocaleDateString","weekday","year","month","day","clearInterval","Provider","value","children","Modal","setAppElement","AddProjectModal","name","setName","isOpen","onRequestClose","className","onSubmit","event","handleAdd","type","onChange","target","required","maxlength","id","HelpModal","href","title","class","SettingsModal","modalReducer","state","action","map","project","Object","assign","display","ModalContext","ModalContextProvider","useReducer","modals","dispatch","dataReducer","projects","tasks","projectList","displayedProject","setTaskId","uuidv4","columns","todoIds","columnOrder","setTodoId","columnname","todos","desc","selectedTask","ids","selected","newColumn","newStart","newFinish","newColumnOrder","colId","rename","columnid","newTodos","newTasks","newProjects","newColumns","newProjectList","theme","DataContext","DataContextProvider","localData","localStorage","getItem","JSON","parse","items","itemDispatch","setItem","stringify","Header","useContext","setSelected","handleModal","modal","handleChange","document","getElementById","setAttribute","keys","length","i","onClick","window","confirm","itemCopy","toString","filter","e","forEach","column","alert","checked","for","preventDefault","TodoItem","getStyle","style","snapshot","background","draggableId","task","index","provided","draggableProps","ref","innerRef","isDragging","dragHandleProps","todoId","key","reduce","result","current","item","console","log","handleRemove","AddTodoModal","setDesc","passTodo","TaskContainer","setId","handleAddTodo","handleRemoveTask","order","transition","borderRadius","onMouseDown","prompt","handleEdit","droppableId","direction","droppableProps","isDraggingOver","placeholder","MainContainer","handleKeyPress","click","onDragEnd","destination","source","Array","from","splice","start","finish","startTodoIds","finishTodoIds","newTaskIds","columnId","todoid","onKeyPress","handleAddTask","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.31076d12.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\n\r\nexport const Time = createContext();\r\n\r\nconst TimeContextProvider = (props) => {\r\n    const [time, setTime] = useState('');\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(\r\n          () => {\r\n            var date = new Date();\r\n            var h = date.getHours(); \r\n            var m = date.getMinutes();\r\n            var s = date.getSeconds();\r\n            var session = \"AM\";\r\n            var options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' };\r\n            let today = new Date().toLocaleDateString(\"en-US\", options);\r\n            if(h == 0){\r\n                h = 12;\r\n                }\r\n            \r\n                if(h > 12){\r\n                h = h - 12;\r\n                session = \"PM\";\r\n                }\r\n                h = (h < 10) ? \"0\" + h : h;\r\n            m = (m < 10) ? \"0\" + m : m;\r\n            s = (s < 10) ? \"0\" + s : s;\r\n            var time = today + \" \" + h + \":\" + m + \":\" + s + \" \" + session;\r\n            setTime(time);\r\n          }\r\n          ,\r\n          1000\r\n        );\r\n     \r\n        return () => {\r\n          clearInterval(interval);\r\n        }\r\n      }, []);\r\n    return ( \r\n        <Time.Provider value={{time}}>\r\n            {props.children}\r\n        </Time.Provider>\r\n     );\r\n}\r\n \r\nexport default TimeContextProvider;","import React, {useState} from 'react';\r\nimport Modal from 'react-modal';\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\nconst AddProjectModal = (props) => {\r\n    const [name, setName] = useState('');\r\n\r\n    const handleNameChange = (event) =>{\r\n        setName(event.target.value);\r\n    }\r\n    return ( \r\n        <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={props.onRequestClose}\r\n        className=\"addprojectmodal\"\r\n        >\r\n            <h1>Add New Project</h1>\r\n                <form onSubmit={(event) => {props.handleAdd(event,name); setName('');}}>\r\n                <div>\r\n                <label>Project Name:</label>\r\n                <input type=\"text\" value={name} name=\"name\" onChange={handleNameChange} required maxlength=\"15\"/>\r\n                </div>\r\n                <button type=\"submit\"><i className='bx bx-chevron-right-square ' id=\"addlogo\"></i>Add Project</button>\r\n                </form>\r\n        </Modal>\r\n     );\r\n}\r\nexport default AddProjectModal;","import React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst HelpModal = (props) => {\r\n    return ( \r\n        <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={props.onRequestClose}\r\n        className=\"addtaskmodal\"\r\n        >\r\n            <h1>About</h1>\r\n            <h2>Created by: John Andre (SizzlingSeal) Andrade</h2>\r\n            <div>\r\n            <div className=\"helpmodal\">\r\n           <label>Personal Github: <a href=\"https://github.com/SizzlingSeal\" target=\"_blank\" title=\"Github Account\"><i class='bx bxl-github'></i></a></label>\r\n           </div>\r\n           <div className=\"helpmodal\">\r\n           <label>Source Code: <a href=\"https://github.com/SizzlingSeal/trello-clone\" target=\"_blank\" title=\"Source Code\"><i className='bx bx-code-block' id=\"edit\" title=\"Source Code\"></i></a></label>\r\n           </div>\r\n           </div>\r\n        </Modal>\r\n     );\r\n}\r\nexport default HelpModal;","import React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst SettingsModal = (props) => {\r\n    return ( \r\n        <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={props.onRequestClose}\r\n        >\r\n            <h1>SETTINGS</h1>\r\n        </Modal>\r\n     );\r\n}\r\nexport default SettingsModal;","\r\n\r\nexport const modalReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'SHOW_MODAL':\r\n            var newState = state.map(project => {\r\n                if(project.id === action.id)\r\n                return Object.assign({}, project, {display:!project.display});\r\n                return project;\r\n            });\r\n            return newState;  \r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport {modalReducer} from '../reducer/ModalReducer';\r\n\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalContextProvider = (props) =>{\r\n    const [modals, dispatch] = useReducer(modalReducer,[\r\n        {\r\n            id:'addmodal',\r\n            display:false\r\n        },\r\n        {\r\n            id:'helpmodal',\r\n            display:false\r\n        },\r\n        {\r\n            id:'settingsmodal',\r\n            display:false\r\n        },\r\n        {\r\n            id:'addtodomodal',\r\n            display:false\r\n        }\r\n\r\n    ]);\r\n\r\n\r\n    return(\r\n        <ModalContext.Provider value={{modals,dispatch}}>\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ModalContextProvider;\r\n\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const dataReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'ADD_PROJECT':\r\n           return {...state, projects:{...state.projects, [action.name]: {\r\n            id:action.name,\r\n            title:action.name,\r\n            tasks:[]\r\n           }}, projectList:[...state.projectList, action.name],\r\n            displayedProject: action.name}\r\n            \r\n        case 'ADD_TASK':\r\n           const project = action.project;\r\n           const setTaskId = uuidv4();\r\n            return {...state, \r\n                projects:{...state.projects, [project]: {\r\n                ...state.projects[project], tasks:[...state.projects[project].tasks, setTaskId]}},\r\n                \r\n                columns:{ ...state.columns,\r\n                    [setTaskId]: {\r\n                        id: setTaskId,\r\n                        name: action.name,\r\n                        todoIds:[]\r\n                    }},\r\n                    columnOrder:[...state.columnOrder, setTaskId]\r\n                    } \r\n        case 'ADD_TODO':\r\n            const setTodoId = uuidv4();\r\n                    return {...state, columns:{...state.columns,\r\n                    [action.columnname] :{\r\n                        ...state.columns[action.columnname],\r\n                        todoIds:[...state.columns[action.columnname].todoIds, setTodoId]\r\n                    }},\r\n                    todos: {...state.todos, [setTodoId]: {\r\n                        id: setTodoId,\r\n                        name: action.name,\r\n                        desc: action.desc\r\n                    }}}            \r\n        case 'CHANGE_SELECTED_TASK':\r\n            return{...state, selectedTask: action.ids}\r\n            \r\n        case 'CHANGE_PROJECT':\r\n        return{...state, columnOrder:[...state.projects[action.selected].tasks],\r\n        displayedProject:action.selected}\r\n\r\n        case 'CHANGE_ORDER_TODO_SAME':\r\n            return {...state, columns:{...state.columns, [action.newColumn.id]: action.newColumn}}\r\n        \r\n        case 'CHANGE_ORDER_TODO':\r\n            return{...state, \r\n                columns: {...state.columns, \r\n                [action.newStart.id]: action.newStart, \r\n                [action.newFinish.id]: action.newFinish,\r\n            }}\r\n\r\n        case 'CHANGE_ORDER_TASK':\r\n            return {...state,  projects:{...state.projects, [state.displayedProject]: {...state.projects[state.displayedProject], tasks: action.newColumnOrder}},\r\n             columnOrder: action.newColumnOrder}\r\n\r\n        case 'CHANGE_COLUMN_NAME':\r\n            return {...state, columns:{...state.columns, [action.colId]: {...state.columns[action.colId], name: action.rename} }}\r\n\r\n        case 'REMOVE_TODO':\r\n            return{\r\n                ...state,\r\n                columns: {\r\n                    ...state.columns,\r\n                    [action.columnid]: {\r\n                        ...state.columns[action.columnid],\r\n                        todoIds:action.newColumn,\r\n                    },\r\n                },\r\n                todos:action.newTodos\r\n            }\r\n\r\n        case 'REMOVE_TASK':\r\n            return{\r\n                ...state,\r\n                projects: {...state.projects, [action.project] : {...state.projects[action.project], tasks: action.newTasks}},\r\n                columns: action.newColumn,\r\n                todos: action.newTodos,\r\n                columnOrder: action.newColumnOrder,\r\n            }\r\n        case 'REMOVE_PROJECT':\r\n            return {\r\n                ...state,\r\n                projects: action.newProjects,\r\n                columns: action.newColumns,\r\n                todos: action.newTodos,\r\n                columnOrder:[],\r\n                projectList: action.newProjectList,\r\n\r\n            }\r\n\r\n        case 'CHANGE_THEME':\r\n            return{\r\n                ...state,\r\n                theme: action.theme\r\n            }\r\n\r\n    }\r\n}","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport {dataReducer} from '../reducer/DataReducer';\r\n\r\nexport const DataContext = createContext();\r\n\r\nconst DataContextProvider = (props) =>{\r\n    const [items, itemDispatch] = useReducer(dataReducer, {\r\n        projects:{},\r\n        columns:{},\r\n        todos:{},\r\n        columnOrder:[],\r\n        projectList:[],\r\n        displayedProject: '',\r\n        selectedTask: '',\r\n        theme: 'light',\r\n    }, () => {\r\n        const localData = localStorage.getItem('items');\r\n        return localData ? JSON.parse(localData) :\r\n        {\r\n            projects:{},\r\n            columns:{},\r\n            todos:{},\r\n            columnOrder:[],\r\n            projectList:[],\r\n            displayedProject: '',\r\n            selectedTask: '',\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('items', JSON.stringify(items))\r\n    }, [items])\r\n\r\n    return(\r\n        <DataContext.Provider value={{items, itemDispatch}}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\nexport default DataContextProvider;\r\n","import React, {useContext, useState} from 'react';\r\nimport {Time} from '../contexts/Time';\r\nimport AddProjectModal from './modals/AddProjectModal';\r\nimport HelpModal from './modals/HelpModal';\r\nimport SettingsModal from './modals/SettingsModal';\r\nimport {ModalContext} from '../contexts/ModalContext';\r\nimport {DataContext} from '../contexts/DataContext';\r\n\r\nconst Header = () => {\r\n    const {time} = useContext(Time);\r\n    const {modals,dispatch} = useContext(ModalContext);\r\n    const {items, itemDispatch} = useContext(DataContext);\r\n    const [selected, setSelected] = useState('');\r\n    document.getElementById('base').setAttribute('data-theme', items.theme);\r\n   \r\n    function handleModal(modal){\r\n        return  () => dispatch({type: 'SHOW_MODAL', id:modal})\r\n    }\r\n\r\n    function handleAdd(event,name){\r\n        itemDispatch({type:'ADD_PROJECT', name});\r\n        dispatch({type: 'SHOW_MODAL', id:'addmodal'});\r\n        handleChange(name);\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleChange(selected){\r\n        setSelected(selected);     \r\n        itemDispatch({type:'CHANGE_PROJECT', selected});\r\n    }\r\n\r\n    function handleDeleteProject(){\r\n        var warning = window.confirm(\"You are going to delete a project\");\r\n        if(warning === true){\r\n            const itemCopy = {...items};\r\n            const project =  document.getElementById(\"projects\").value.toString();\r\n            const newProjectList = items.projectList.filter(e => e !== project);\r\n            const {tasks} =itemCopy.projects[project];\r\n            if(tasks.length > 0){//getting column in projects and deleting in columns\r\n             tasks.forEach(column => {\r\n                 const {todoIds} = itemCopy.columns[column];\r\n                 \r\n                 if(todoIds.length > 0 ){\r\n                     todoIds.forEach(id => {\r\n                         delete itemCopy.todos[id]//delete all todos\r\n                     });\r\n                 };\r\n                 delete itemCopy.columns[column]\r\n             });\r\n           };\r\n           delete itemCopy.projects[project];//final step delete the project\r\n           let newColumns = itemCopy.columns;\r\n           let newTodos = itemCopy.todos;\r\n           let newProjects = itemCopy.projects;\r\n           itemDispatch({type: 'REMOVE_PROJECT',  newProjectList, newColumns, newTodos, newProjects});\r\n           if(items.projectList.length >= 2  ){\r\n               handleChange(items.projectList[1]);\r\n           } else{\r\n               alert(\"No More Projects\")\r\n           }\r\n        }else{\r\n            return;\r\n        }\r\n    }\r\n    function toggleTheme(){\r\n     if(document.getElementById('switch').checked === true){\r\n        itemDispatch({type:'CHANGE_THEME', theme:'dark'});\r\n     }else{\r\n        itemDispatch({type:'CHANGE_THEME', theme:'light'});\r\n     }  \r\n    }\r\n    \r\n    return ( \r\n        <header>\r\n            <div className=\"organizer\">\r\n            <select name=\"projects\" id=\"projects\" onChange={(event) => handleChange(event.target.value)} value={items.displayedProject}>\r\n              {Object.keys(items.projects).length !== 0 ? \r\n              Object.keys(items.projects).map(i => {return <option key={i} value={i}>{i}</option>})\r\n              : <option>Create new project</option> }\r\n            </select>\r\n            <i className='bx bx-book-add bx-tada-hover' id=\"add\" \r\n            onClick={handleModal('addmodal')} title=\"Add Project\"></i>\r\n            {Object.keys(items.projects).length !== 0 &&  <i className='bx bx-trash-alt bx-tada-hover' id=\"trashproject\" onClick={handleDeleteProject}></i>}\r\n            </div>\r\n            <div className=\"title\">\r\n            <a>Project To Note</a>\r\n            </div>\r\n            <div className=\"information\">\r\n            <input type=\"checkbox\" id=\"switch\" onChange={toggleTheme} checked={items.theme === 'dark' ? true : false} /><label for=\"switch\">Toggle</label>\r\n            <i className='bx bxs-help-circle' id=\"help\"\r\n            onClick={handleModal('helpmodal')} title=\"About\"></i>\r\n            <a>{time}</a>\r\n            </div>\r\n            <AddProjectModal isOpen={modals[0].display} onRequestClose={handleModal('addmodal')} handleAdd={handleAdd}/>\r\n            <HelpModal isOpen={modals[1].display} onRequestClose={handleModal('helpmodal')}/>\r\n            <SettingsModal isOpen={modals[2].display} onRequestClose={handleModal('settingsmodal')}/>       \r\n        </header>\r\n     );\r\n}\r\nexport default Header;","\r\nimport React, {useContext, useState} from 'react';\r\nimport {DataContext} from '../contexts/DataContext';\r\nimport {Draggable} from 'react-beautiful-dnd';\r\n\r\n\r\nconst TodoItem = (props) => {\r\n    const {items, itemDispatch} = useContext(DataContext);\r\n    const [id, setId] = useState(props.columnname.id);\r\n\r\n    function handleRemove(todoId){\r\n    let  newTodos = Object.keys(items.todos)\r\n    .filter(key => key !== todoId)\r\n    .reduce((result, current) => {\r\n    result[current] = items.todos[current];\r\n    return result;\r\n    }, {});\r\n    let columnid = id;\r\n    let newColumn = items.columns[columnid].todoIds.filter(item => item !== todoId);\r\n    console.log(newColumn);\r\n    itemDispatch({type:'REMOVE_TODO', newTodos, columnid, newColumn})\r\n    }\r\n    \r\n    function getStyle(style, snapshot){\r\n        return  snapshot ?  {\r\n            ...style,\r\n            background: `#1877f2`,\r\n          } :  style;\r\n          \r\n    }\r\n\r\n    return ( \r\n        <Draggable draggableId={props.task.id} index={props.index}>\r\n            {(provided, snapshot) => (\r\n                <div className=\"todo-item\"\r\n                {...provided.draggableProps}\r\n                ref={provided.innerRef}\r\n                isDragging={snapshot.isDragging}\r\n                style={getStyle(provided.draggableProps.style, snapshot.isDragging)}\r\n                >\r\n                <i className='bx bx-grid-vertical' id=\"dragicon\" title=\"Drag\" {...provided.dragHandleProps}></i>\r\n                <div>\r\n                <h4  className={props.columnname.id}>{props.task.name}</h4>\r\n                </div>\r\n                <div>\r\n                <i className='bx bx-task bx-tada-hover' id=\"checktask\" title=\"Complete Task\"></i>\r\n                <i className='bx bx-task-x bx-tada-hover' id=\"deletetask\" title=\"Remove Task\" onClick={() => handleRemove(props.task.id)}></i>\r\n                </div>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n     );\r\n}\r\nexport default TodoItem;","import React, {useState} from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst AddTodoModal = (props) => {\r\n    const [name, setName] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    \r\n    function handleNameChange(event){\r\n        setName(event.target.value);\r\n    }\r\n\r\n    function handleDescChange(event){\r\n        setDesc(event.target.value);\r\n    }\r\n\r\n    return ( \r\n        <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={props.onRequestClose}\r\n        className=\"addtaskmodal\">\r\n        <h1>Add Task</h1>\r\n        <form onSubmit={(event) => {props.passTodo(event,name,desc); setName(''); setDesc(''); }}>\r\n        <div>\r\n        <label>Task Name:</label>\r\n        <input type=\"text\" onChange={handleNameChange} required maxlength=\"25\"/>\r\n        </div>\r\n        <div>\r\n        <label>Task Description:</label>\r\n        <textarea required onChange={handleDescChange}>\r\n        </textarea>\r\n        </div>\r\n        <button>Add task</button>\r\n        </form>\r\n        </Modal>\r\n     );\r\n}\r\nexport default AddTodoModal;","import React, {useContext, useState} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport AddTodoModal from './modals/AddTodoModal';\r\nimport {ModalContext} from '../contexts/ModalContext';\r\nimport {DataContext} from '../contexts/DataContext';\r\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\r\n\r\nconst TaskContainer = (props) => {\r\n    const {modals,dispatch} = useContext(ModalContext);\r\n    const {items, itemDispatch} = useContext(DataContext);\r\n    const [id, setId] = useState('');\r\n    \r\n    console.log(props.index)\r\n\r\n    function handleModal(modal){\r\n        return  () => dispatch({type: 'SHOW_MODAL', id:modal})\r\n    }\r\n\r\n    function passTodo(event,name, desc){\r\n        const columnId = items.selectedTask;\r\n        handleAddTodo(event,name, desc, columnId);\r\n    }\r\n\r\n    function handleChange(){\r\n        const ids = id;\r\n        itemDispatch({type: 'CHANGE_SELECTED_TASK', ids})\r\n    }\r\n\r\n    function handleAddTodo(event,name,desc, columnname){\r\n        itemDispatch({type: 'ADD_TODO', name, desc, columnname });\r\n        dispatch({type: 'SHOW_MODAL', id:'addtodomodal'});\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleRemoveTask(){\r\n        var warning = window.confirm(\"You are going to delete a Task\");\r\n        if(warning === true){\r\n            const colId = id;\r\n        const project = document.getElementById('projects').value.toString();\r\n        let  newColumn = Object.keys(items.columns)\r\n        .filter(key => key !== colId)\r\n        .reduce((result, current) => {\r\n        result[current] = items.columns[current];\r\n        return result;\r\n        }, {});\r\n        let newColumnOrder = items.columnOrder.filter(order => order !== colId);\r\n        let newTasks = items.projects[project].tasks.filter(task => task !== colId);\r\n        const itemCopy = items;\r\n        const {todoIds} =itemCopy.columns[id];\r\n          if(todoIds.length > 0){\r\n           todoIds.forEach(id => {\r\n               delete itemCopy.todos[id]\r\n           });\r\n         };\r\n         delete itemCopy.columns[id]\r\n        let newTodos = itemCopy.todos;\r\n        itemDispatch({type:'REMOVE_TASK', newColumn, newColumnOrder, project, newTasks, newTodos});\r\n        }\r\n        else{\r\n            return;\r\n        }\r\n    }\r\n\r\n    function handlePressDown(){\r\n        setId(props.columnname.id);\r\n    }\r\n\r\n    function handleEdit(){\r\n        const colId = id;\r\n        var rename = prompt(\"Rename Task:\", props.columnname.name);\r\n        if(rename === null){\r\n            return;\r\n        }else{\r\n            itemDispatch({type:'CHANGE_COLUMN_NAME', rename, colId});\r\n        } \r\n    }\r\n    function getStyle(style, snapshot){\r\n        return  snapshot ?  {\r\n            ...style,\r\n            background: `#165cb8`,\r\n            transition: `background ease 0.5s`,\r\n            borderRadius: `5px`\r\n          } :  style;  \r\n    }\r\n\r\n    return ( \r\n        <Draggable key={props.columnname.id} draggableId={props.columnname.id} index={props.index} >\r\n            {provided => (\r\n        <div className=\"task-container\" onMouseDown={() => handlePressDown()}\r\n        {...provided.draggableProps}\r\n        ref={provided.innerRef}>\r\n            <div className=\"top\">\r\n            <div className=\"dragicon\" {...provided.dragHandleProps}></div>\r\n            <div>\r\n            <p style={{display: \"inline-block\"}} >{props.columnname.name} </p>\r\n            <i className='bx bx-edit bx-tada-hover' id=\"edit\" onClick={() => handleEdit()}></i>\r\n            </div>\r\n            <i className='bx bx-add-to-queue bx-tada-hover' id=\"add\" onClick={() => {handleChange(); dispatch({type: 'SHOW_MODAL', id:'addtodomodal'});}}></i>\r\n            <i className='bx bx-trash bx-tada-hover' id=\"remove\" value={props.columnname.id} onClick={ handleRemoveTask}></i>\r\n             </div>\r\n             <Droppable droppableId={props.columnname.id} type=\"task\" direction=\"vertical\">\r\n                 {(provided, snapshot) => (\r\n                     <div className=\"todo-container\"\r\n                     ref={provided.innerRef}\r\n                     {...provided.droppableProps}\r\n                     isDraggingOver={snapshot.isDraggingOver}\r\n                     style={getStyle(provided.droppableProps.style, snapshot.isDraggingOver)}>\r\n                    {props.task.map((task,index) => (\r\n                        <TodoItem key={task.id} task={task} index={index} columnname={props.columnname}/>\r\n                    ))}\r\n                    {provided.placeholder}\r\n                    </div>\r\n                 )}\r\n            </Droppable>\r\n            <AddTodoModal isOpen={modals[3].display} onRequestClose={handleModal('addtodomodal')} passTodo={passTodo}/>\r\n        </div>\r\n         )}\r\n        </Draggable>\r\n     );\r\n}\r\nexport default TaskContainer;","import React, {useContext, useState} from 'react';\r\nimport {DataContext} from '../contexts/DataContext';\r\nimport TaskContainer from './TaskContainer';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nconst MainContainer = () => {\r\n    const {items, itemDispatch} = useContext(DataContext);\r\n    const [name, setName] = useState('');\r\n\r\n    function handleAddTask(name, project){\r\n        if(name.length === 0 ){\r\n            alert(\"Enter Task Name!\");\r\n        }else{\r\n        setName('');\r\n        itemDispatch({type:'ADD_TASK', name, project});\r\n    }\r\n    }\r\n    \r\n    function handleChange(event){\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const onDragEnd = result => {\r\n        const{destination, source, draggableId, type} = result;\r\n\r\n        if(!destination){\r\n            return;\r\n        }\r\n        if(destination.droppableId === source.droppableId && \r\n            destination.index === source.index){ \r\n                return;\r\n        }\r\n\r\n        if(type === 'column'){\r\n            const newColumnOrder = Array.from(items.columnOrder);\r\n            newColumnOrder.splice(source.index, 1);\r\n            newColumnOrder.splice(destination.index, 0 , draggableId);\r\n            itemDispatch({type:'CHANGE_ORDER_TASK', newColumnOrder});\r\n            return;\r\n            \r\n        }\r\n\r\n        const start = items.columns[source.droppableId];\r\n        const finish = items.columns[destination.droppableId];\r\n\r\n        if(start === finish){\r\n            const newTaskIds = Array.from(start.todoIds);\r\n            newTaskIds.splice(source.index, 1);\r\n            newTaskIds.splice(destination.index, 0, draggableId);\r\n            \r\n            const newColumn ={\r\n                ...start,\r\n                todoIds: newTaskIds,\r\n            };\r\n            itemDispatch({type:'CHANGE_ORDER_TODO_SAME', newColumn});\r\n            return;    \r\n        }\r\n\r\n        //moving from one list to another\r\n        const startTodoIds = Array.from(start.todoIds);\r\n        startTodoIds.splice(source.index, 1);\r\n        const newStart ={\r\n            ...start,\r\n            todoIds: startTodoIds,\r\n        };\r\n\r\n        const finishTodoIds = Array.from(finish.todoIds);\r\n        finishTodoIds.splice(destination.index, 0, draggableId);\r\n        const newFinish={\r\n            ...finish,\r\n            todoIds: finishTodoIds,\r\n        };\r\n\r\n        itemDispatch({type:'CHANGE_ORDER_TODO', newStart, newFinish});\r\n\r\n    }\r\n    const handleKeyPress = (event) => {\r\n        if(event.key === 'Enter'){\r\n          document.getElementById(\"addnewtask\").click();\r\n        }\r\n      }\r\n\r\n    return ( \r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable \r\n            droppableId=\"all-column\"\r\n            direction=\"horizontal\" \r\n            type=\"column\">\r\n                {provided => (   \r\n        <div className=\"main-container\" \r\n        {...provided.droppableProps}\r\n        ref={provided.innerRef}>\r\n            {items.columnOrder.map((columnId, index) => {   \r\n                 const column = items.columns[columnId];\r\n                 const task = column.todoIds.map(todoid => items.todos[todoid]);\r\n                \r\n                 return <TaskContainer task={task} columnname={column} index={index}/>\r\n             })}\r\n            {Object.keys(items.projects).length !== 0 && \r\n            <div className=\"addtask\"> \r\n            <input type=\"text\" onChange={handleChange} value={name} onKeyPress={handleKeyPress} placeholder=\"Enter Task Name\"/>\r\n            <button onClick={() => handleAddTask(name, items.displayedProject)} id=\"addnewtask\">Add new Task</button>\r\n             </div>}\r\n             {provided.placeholder}\r\n        </div>\r\n        )}\r\n        </Droppable>\r\n        </DragDropContext>\r\n     );\r\n}\r\nexport default MainContainer;","import Header from \"./components/Header\";\nimport MainContainer from \"./components/MainContainer\";\nimport ModalContextProvider from \"./contexts/ModalContext\";\nimport TimeContextProvider from \"./contexts/Time\";\nimport DataContextProvider from './contexts/DataContext';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DataContextProvider>\n      <ModalContextProvider>\n      <TimeContextProvider>\n      <Header/>\n      <MainContainer/>\n      </TimeContextProvider>\n      </ModalContextProvider>\n      </DataContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}