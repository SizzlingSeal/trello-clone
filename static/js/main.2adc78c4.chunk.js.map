{"version":3,"sources":["contexts/Time.js","components/modals/AddProjectModal.js","components/modals/HelpModal.js","components/modals/SettingsModal.js","reducer/ModalReducer.js","contexts/ModalContext.js","reducer/DataReducer.js","contexts/DataContext.js","components/Header.js","components/TodoItem.js","components/modals/AddTodoModal.js","components/TaskContainer.js","components/MainContainer.js","reducer/ProjectReducer.js","contexts/ProjectContext.js","App.js","index.js"],"names":["Time","createContext","TimeContextProvider","props","useState","time","setTime","useEffect","interval","setInterval","date","Date","h","getHours","m","getMinutes","s","getSeconds","session","today","toLocaleDateString","weekday","year","month","day","clearInterval","Provider","value","children","Modal","setAppElement","AddProjectModal","name","setName","desc","setDesc","isOpen","onRequestClose","className","onSubmit","event","handleAdd","type","onChange","target","required","maxlength","id","HelpModal","SettingsModal","modalReducer","state","action","map","project","Object","assign","display","ModalContext","ModalContextProvider","useReducer","modals","dispatch","dataReducer","projects","title","tasks","projectList","displayedProject","console","log","setTaskId","uuidv4","columns","todoIds","columnOrder","selectedTask","ids","setTodoId","alert","columnname","todos","selected","newColumn","newStart","newFinish","columnid","newTodos","DataContext","DataContextProvider","items","itemDispatch","Header","useContext","setSelected","handleModal","modal","handleChange","keys","length","i","onClick","placeholder","preventDefault","TodoItem","task","draggableId","index","provided","snapshot","draggableProps","ref","innerRef","isDragging","dragHandleProps","todoId","filter","key","reduce","result","current","item","handleRemove","AddTodoModal","passTodo","TaskContainer","style","droppableId","droppableProps","isDraggingOver","handleAddTodo","MainContainer","onDragEnd","destination","source","start","finish","startTodoIds","Array","from","splice","finishTodoIds","newTaskIds","columnId","column","todoid","handleAddTask","projectReducer","ProjectContext","ProjectContextProvider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2adc78c4.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\n\r\nexport const Time = createContext();\r\n\r\nconst TimeContextProvider = (props) => {\r\n    const [time, setTime] = useState('');\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(\r\n          () => {\r\n            var date = new Date();\r\n            var h = date.getHours(); \r\n            var m = date.getMinutes();\r\n            var s = date.getSeconds();\r\n            var session = \"AM\";\r\n            var options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' };\r\n            let today = new Date().toLocaleDateString(\"en-US\", options);\r\n            if(h == 0){\r\n                h = 12;\r\n                }\r\n            \r\n                if(h > 12){\r\n                h = h - 12;\r\n                session = \"PM\";\r\n                }\r\n                h = (h < 10) ? \"0\" + h : h;\r\n            m = (m < 10) ? \"0\" + m : m;\r\n            s = (s < 10) ? \"0\" + s : s;\r\n            var time = today + \" \" + h + \":\" + m + \":\" + s + \" \" + session;\r\n            setTime(time);\r\n          }\r\n          ,\r\n          1000\r\n        );\r\n     \r\n        return () => {\r\n          clearInterval(interval);\r\n        }\r\n      }, []);\r\n    return ( \r\n        <Time.Provider value={{time}}>\r\n            {props.children}\r\n        </Time.Provider>\r\n     );\r\n}\r\n \r\nexport default TimeContextProvider;","import React, {useState} from 'react';\r\nimport Modal from 'react-modal';\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\nconst AddProjectModal = (props) => {\r\n    const [name, setName] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n\r\n    const handleNameChange = (event) =>{\r\n        setName(event.target.value);\r\n    }\r\n    const handleDescChange = (event) =>{\r\n        setDesc(event.target.value);\r\n    }\r\n    return ( \r\n        <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={props.onRequestClose}\r\n        className=\"addprojectmodal\"\r\n        >\r\n            <h1>Add New Project</h1>\r\n                <form onSubmit={(event) => {props.handleAdd(event,name,desc); setName(''); setDesc('');}}>\r\n                <div>\r\n                <label>Project Name:</label>\r\n                <input type=\"text\" value={name} name=\"name\" onChange={handleNameChange} required maxlength=\"15\"/>\r\n                </div>\r\n                <div>\r\n                <label>Project Description:</label>\r\n                <textarea value={desc} name=\"desc\" onChange={handleDescChange} required>\r\n                </textarea>\r\n                </div>\r\n                <button type=\"submit\"><i className='bx bx-chevron-right-square ' id=\"addlogo\"></i>Add Project</button>\r\n                </form>\r\n        </Modal>\r\n     );\r\n}\r\nexport default AddProjectModal;","import React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\nconst HelpModal = (props) => {\r\n    return ( \r\n        <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={props.onRequestClose}\r\n        >\r\n            <h1>Help</h1>\r\n\r\n        </Modal>\r\n     );\r\n}\r\n \r\nexport default HelpModal;","import React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\nconst SettingsModal = (props) => {\r\n    return ( \r\n        <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={props.onRequestClose}\r\n        >\r\n            <h1>SETTINGS</h1>\r\n\r\n        </Modal>\r\n     );\r\n}\r\n \r\nexport default SettingsModal;","\r\n\r\nexport const modalReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'SHOW_MODAL':\r\n            var newState = state.map(project => {\r\n                if(project.id === action.id)\r\n                return Object.assign({}, project, {display:!project.display});\r\n                return project;\r\n            });\r\n            return newState;  \r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport {modalReducer} from '../reducer/ModalReducer';\r\n\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalContextProvider = (props) =>{\r\n    const [modals, dispatch] = useReducer(modalReducer,[\r\n        {\r\n            id:'addmodal',\r\n            display:false\r\n        },\r\n        {\r\n            id:'helpmodal',\r\n            display:false\r\n        },\r\n        {\r\n            id:'settingsmodal',\r\n            display:false\r\n        },\r\n        {\r\n            id:'addtodomodal',\r\n            display:false\r\n        }\r\n\r\n    ]);\r\n\r\n\r\n    return(\r\n        <ModalContext.Provider value={{modals,dispatch}}>\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ModalContextProvider;\r\n\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nexport const dataReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'ADD_PROJECT':\r\n           return {...state, projects:{...state.projects, [action.name]: {\r\n            id:action.name,\r\n            title:action.name,\r\n            desc:action.desc,\r\n            tasks:[]\r\n           }}, projectList:[...state.projectList, [action.name]],\r\n            displayedProject: action.name}\r\n            \r\n\r\n        case 'ADD_TASK':\r\n            console.log(action.project);\r\n           const project = action.project;\r\n           const setTaskId = uuidv4();\r\n            return {...state, \r\n                projects:{...state.projects, [project]: {\r\n                ...state.projects[project], tasks:[...state.projects[project].tasks, setTaskId]}},\r\n                \r\n                columns:{ ...state.columns,\r\n                    [setTaskId]: {\r\n                        id: setTaskId,\r\n                        name: action.name,\r\n                        todoIds:[]\r\n                    }},\r\n                    columnOrder:[...state.columnOrder, setTaskId]\r\n                    } \r\n                    \r\n        case 'CHANGE_SELECTED_TASK':\r\n            return{...state, selectedTask: action.ids}\r\n            \r\n\r\n        case 'ADD_TODO':\r\n            const setTodoId = uuidv4();\r\n            alert(action.desc)\r\n                    return {...state, columns:{...state.columns,\r\n                    [action.columnname] :{\r\n                        ...state.columns[action.columnname],\r\n                        todoIds:[...state.columns[action.columnname].todoIds, setTodoId]\r\n                    }},\r\n                    todos: {...state.todos, [setTodoId]: {\r\n                        id: setTodoId,\r\n                        name: action.name,\r\n                        desc: action.desc\r\n                    }}}\r\n            \r\n   \r\n        case 'CHANGE_PROJECT':\r\n        return{...state, columnOrder:[...state.projects[action.selected].tasks],\r\n        displayedProject:action.selected}\r\n\r\n        case 'CHANGE_ORDER_TODO_SAME':\r\n            return {...state, columns:{...state.columns, [action.newColumn.id]: action.newColumn}}\r\n        \r\n        case 'CHANGE_ORDER_TODO':\r\n            return{...state, \r\n                columns: {...state.columns, \r\n                [action.newStart.id]: action.newStart, \r\n                [action.newFinish.id]: action.newFinish,\r\n            }}\r\n        case 'REMOVE_TODO':\r\n            return{\r\n                ...state,\r\n                columns: {\r\n                    ...state.columns,\r\n                    [action.columnid]: {\r\n                        ...state.columns[action.columnid],\r\n                        todoIds:action.newColumn,\r\n                    },\r\n                },\r\n                todos:action.newTodos\r\n            }\r\n            \r\n\r\n            \r\n     \r\n              \r\n              \r\n          \r\n\r\n\r\n\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport {dataReducer} from '../reducer/DataReducer';\r\n\r\nexport const DataContext = createContext();\r\n\r\nconst DataContextProvider = (props) =>{\r\n    const [items, itemDispatch] = useReducer(dataReducer, {\r\n        projects:{},\r\n        columns:{},\r\n        todos:{},\r\n        columnOrder:[],\r\n        projectList:[],\r\n        displayedProject: '',\r\n        selectedTask: 'heyasgsgagasgas',\r\n    });\r\n\r\n    return(\r\n        <DataContext.Provider value={{items, itemDispatch}}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default DataContextProvider;\r\n","import React, {useContext, useState} from 'react';\r\nimport {Time} from '../contexts/Time';\r\nimport AddProjectModal from './modals/AddProjectModal';\r\nimport HelpModal from './modals/HelpModal';\r\nimport SettingsModal from './modals/SettingsModal';\r\nimport {ModalContext} from '../contexts/ModalContext';\r\nimport {DataContext} from '../contexts/DataContext';\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const {time} = useContext(Time);\r\n    const {modals,dispatch} = useContext(ModalContext);\r\n    const {items, itemDispatch} = useContext(DataContext);\r\n    const [selected, setSelected] = useState('');\r\n    function handleModal(modal){\r\n        return  () => dispatch({type: 'SHOW_MODAL', id:modal})\r\n    }\r\n\r\n    function handleAdd(event,name,desc){\r\n        itemDispatch({type:'ADD_PROJECT', name, desc});\r\n        dispatch({type: 'SHOW_MODAL', id:'addmodal'});\r\n        handleChange(name);\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleChange(selected){\r\n        setSelected(selected);     \r\n        itemDispatch({type:'CHANGE_PROJECT', selected});\r\n    }\r\n\r\n    return ( \r\n        <header>\r\n            <div className=\"organizer\">\r\n            <select name=\"projects\" id=\"projects\" onChange={(event) => handleChange(event.target.value)} value={selected}>\r\n              {Object.keys(items.projects).length !== 0 ? \r\n              Object.keys(items.projects).map(i => {return <option key={i} value={i}>{i}</option>})\r\n              : <option>Create new project</option> }\r\n            </select>\r\n            <i className='bx bx-book-add bx-tada-hover' id=\"add\" \r\n            onClick={handleModal('addmodal')} title=\"Add Project\"></i>\r\n            <div className=\"search\">\r\n            <i className='bx bx-search-alt-2' id=\"searchlogo\" ></i>\r\n            <input type=\"text\" placeholder=\"Search\"/>\r\n            </div>\r\n            </div>\r\n            <div className=\"title\">\r\n            <a>Project To Note</a>\r\n            </div>\r\n            <div className=\"information\">\r\n            <i className='bx bxs-wrench' id=\"settings\"\r\n            onClick={handleModal('settingsmodal')} title=\"Settings\"></i>\r\n            <i className='bx bxs-help-circle' id=\"help\"\r\n            onClick={handleModal('helpmodal')} title=\"Help\"></i>\r\n            <a>{time}</a>\r\n            </div>\r\n            <AddProjectModal isOpen={modals[0].display} onRequestClose={handleModal('addmodal')} handleAdd={handleAdd}/>\r\n            <HelpModal isOpen={modals[1].display} onRequestClose={handleModal('helpmodal')}/>\r\n            <SettingsModal isOpen={modals[2].display} onRequestClose={handleModal('settingsmodal')}/>       \r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","\r\nimport React, {useContext, useState} from 'react';\r\nimport {DataContext} from '../contexts/DataContext';\r\nimport {Draggable} from 'react-beautiful-dnd';\r\n\r\n\r\nconst TodoItem = (props) => {\r\n    const {items, itemDispatch} = useContext(DataContext);\r\n    const [id, setId] = useState(props.columnname.id);\r\n\r\n   console.log(props.task.id)\r\n    \r\n    \r\n    function handleRemove(todoId){\r\n    let  newTodos = Object.keys(items.todos)\r\n    .filter(key => key !== todoId)\r\n    .reduce((result, current) => {\r\n    result[current] = items.todos[current];\r\n    return result;\r\n    }, {});\r\n    let columnid = id;\r\n    let newColumn = items.columns[columnid].todoIds.filter(item => item !== todoId);\r\n    console.log(newColumn);\r\n    itemDispatch({type:'REMOVE_TODO', newTodos, columnid, newColumn})\r\n\r\n    }\r\n    return ( \r\n        <Draggable draggableId={props.task.id} index={props.index}>\r\n            {(provided, snapshot) => (\r\n                <div className=\"todo-item\"\r\n                {...provided.draggableProps}\r\n                ref={provided.innerRef}\r\n                isDragging={snapshot.isDragging}\r\n                >\r\n                <div className=\"dragicon\" {...provided.dragHandleProps}></div>\r\n                <div>\r\n                <h4>{props.task.name}</h4>\r\n                </div>\r\n                <div>\r\n                <i className='bx bx-task bx-tada-hover' id=\"checktask\" title=\"Complete Task\"></i>\r\n                <i className='bx bx-task-x bx-tada-hover' id=\"deletetask\" title=\"Remove Task\" onClick={() => handleRemove(props.task.id)}></i>\r\n                </div>\r\n                </div>\r\n            )}\r\n        \r\n        </Draggable>\r\n     );\r\n}\r\n \r\nexport default TodoItem;","import React, {useState} from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\nconst AddTodoModal = (props) => {\r\n    const [name, setName] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    function handleNameChange(event){\r\n        setName(event.target.value);\r\n    }\r\n    function handleDescChange(event){\r\n        setDesc(event.target.value);\r\n    }\r\n\r\n    return ( \r\n        <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={props.onRequestClose}\r\n        className=\"addtaskmodal\">\r\n        <h1>Add Task</h1>\r\n        <form onSubmit={(event) => {props.passTodo(event,name,desc); setName(''); setDesc(''); }}>\r\n        <div>\r\n        <label>Task Name:</label>\r\n        <input type=\"text\" onChange={handleNameChange} required maxlength=\"25\"/>\r\n        </div>\r\n        <div>\r\n        <label>Task Description:</label>\r\n        <textarea required onChange={handleDescChange}>\r\n        </textarea>\r\n        </div>\r\n        \r\n        <button>Add task</button>\r\n        </form>\r\n        </Modal>\r\n     );\r\n}\r\n \r\nexport default AddTodoModal;","import React, {useContext, useState} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport AddTodoModal from './modals/AddTodoModal';\r\nimport {ModalContext} from '../contexts/ModalContext';\r\nimport {DataContext} from '../contexts/DataContext';\r\nimport {Droppable} from 'react-beautiful-dnd';\r\n\r\n\r\nconst TaskContainer = (props) => {\r\n    \r\n    const {modals,dispatch} = useContext(ModalContext);\r\n    const {items, itemDispatch} = useContext(DataContext);\r\n    const [id, setId] = useState(props.columnname.id);\r\n\r\n    function handleModal(modal){\r\n        return  () => dispatch({type: 'SHOW_MODAL', id:modal})\r\n    }\r\n    function passTodo(event,name, desc){\r\n        const columnId = items.selectedTask;\r\n        handleAddTodo(event,name, desc, columnId);\r\n    }\r\n    function handleChange(){\r\n        const ids = id;\r\n        itemDispatch({type: 'CHANGE_SELECTED_TASK', ids})\r\n    }\r\n    function handleAddTodo(event,name,desc, columnname){\r\n        itemDispatch({type: 'ADD_TODO', name, desc, columnname });\r\n        dispatch({type: 'SHOW_MODAL', id:'addtodomodal'});\r\n        event.preventDefault();\r\n    }\r\n\r\n    return ( \r\n        <div className=\"task-container\">\r\n            <div className=\"top\">\r\n            <div className=\"dragicon\"></div>\r\n            <div>\r\n            <p style={{display: \"inline-block\"}} >{props.columnname.name} </p>\r\n            <i className='bx bx-edit bx-tada-hover' id=\"edit\" ></i>\r\n            </div>\r\n            <i className='bx bx-add-to-queue bx-tada-hover' id=\"add\" onClick={() => {handleChange(); dispatch({type: 'SHOW_MODAL', id:'addtodomodal'});}}></i>\r\n             </div>\r\n             <Droppable droppableId={props.columnname.id}>\r\n                 {(provided, snapshot) => (\r\n                     <div className=\"todo-container\"\r\n                     ref={provided.innerRef}\r\n                     {...provided.droppableProps}\r\n                     isDraggingOver={snapshot.isDraggingOver}\r\n                     >\r\n\r\n                    {props.task.map((task,index) => (\r\n                        <TodoItem key={task.id} task={task} index={index} columnname={props.columnname}/>\r\n                    ))}\r\n                    {provided.placeholder}\r\n                    </div>\r\n                 )}\r\n            </Droppable>\r\n            <AddTodoModal isOpen={modals[3].display} onRequestClose={handleModal('addtodomodal')} passTodo={passTodo}/>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TaskContainer;","import React, {useContext, useState} from 'react';\r\nimport {DataContext} from '../contexts/DataContext';\r\nimport TaskContainer from './TaskContainer';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\n\r\n\r\nconst MainContainer = () => {\r\n    const {items, itemDispatch} = useContext(DataContext);\r\n    const [name, setName] = useState('');\r\n\r\n    function handleAddTask(name, project){\r\n        if(name.length === 0 ){\r\n            alert(\"Enter Task Name!\");\r\n        }else{\r\n        setName('');\r\n        itemDispatch({type:'ADD_TASK', name, project});\r\n    }\r\n    }\r\n    function handleChange(event){\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const onDragEnd = result => {\r\n        const{destination, source, draggableId} = result;\r\n        if(!destination){\r\n            return;\r\n        }\r\n        if(destination.droppableId === source.droppableId && \r\n            destination.index === source.index){ alert(\"nani\");\r\n                return;\r\n        }\r\n        const start = items.columns[source.droppableId];\r\n        const finish = items.columns[destination.droppableId];\r\n        if(start === finish){\r\n            const newTaskIds = Array.from(start.todoIds);\r\n            newTaskIds.splice(source.index, 1);\r\n            newTaskIds.splice(destination.index, 0, draggableId);\r\n            \r\n            const newColumn ={\r\n                ...start,\r\n                todoIds: newTaskIds,\r\n            };\r\n\r\n            \r\n            itemDispatch({type:'CHANGE_ORDER_TODO_SAME', newColumn});\r\n            return;\r\n            \r\n        }\r\n\r\n        //moving from one list to another\r\n        const startTodoIds = Array.from(start.todoIds);\r\n        startTodoIds.splice(source.index, 1);\r\n        const newStart ={\r\n            ...start,\r\n            todoIds: startTodoIds,\r\n        };\r\n\r\n        const finishTodoIds = Array.from(finish.todoIds);\r\n        finishTodoIds.splice(destination.index, 0, draggableId);\r\n        const newFinish={\r\n            ...finish,\r\n            todoIds: finishTodoIds,\r\n        };\r\n\r\n        itemDispatch({type:'CHANGE_ORDER_TODO', newStart, newFinish});\r\n\r\n    }\r\n\r\n    return ( \r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"main-container\" >\r\n            {items.columnOrder.map(columnId => {   \r\n                 const column = items.columns[columnId];\r\n                 const task = column.todoIds.map(todoid => items.todos[todoid]);\r\n                \r\n                 return <TaskContainer task={task} columnname={column} />\r\n             })}\r\n            {Object.keys(items.projects).length !== 0 && \r\n            <div className=\"addtask\"> \r\n            <input type=\"text\" onChange={handleChange} value={name} placeholder=\"Enter Task Name\"/>\r\n            <button onClick={() => handleAddTask(name, items.displayedProject)}>Add new Task</button>\r\n             </div>}\r\n        </div>\r\n        </DragDropContext>\r\n     );\r\n}\r\n \r\nexport default MainContainer;","\r\n\r\nexport const projectReducer = (state, action) => {\r\n    switch(action.type){\r\n        \r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport {projectReducer} from '../reducer/ProjectReducer';\r\n\r\nexport const ProjectContext = createContext();\r\n\r\nconst ProjectContextProvider = (props) =>{\r\n    const [projects, dispatch] = useReducer(projectReducer, []);\r\n\r\n    return(\r\n        <ProjectContext.Provider value={{projects, dispatch}}>\r\n            {props.children}\r\n        </ProjectContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProjectContextProvider;\r\n\r\n","import Header from \"./components/Header\";\nimport MainContainer from \"./components/MainContainer\";\nimport ModalContextProvider from \"./contexts/ModalContext\";\nimport ProjectContextProvider from \"./contexts/ProjectContext\";\nimport TimeContextProvider from \"./contexts/Time\";\nimport DataContextProvider from './contexts/DataContext';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DataContextProvider>\n      <ModalContextProvider>\n      <ProjectContextProvider>\n      <TimeContextProvider>\n      <Header/>\n      <MainContainer/>\n      </TimeContextProvider>\n      </ProjectContextProvider>\n      </ModalContextProvider>\n      </DataContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}