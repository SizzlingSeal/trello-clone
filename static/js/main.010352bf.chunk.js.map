{"version":3,"sources":["contexts/Time.js","components/modals/AddProjectModal.js","components/modals/HelpModal.js","reducer/ModalReducer.js","contexts/ModalContext.js","reducer/DataReducer.js","contexts/DataContext.js","components/Header.js","components/TodoItem.js","components/modals/AddTodoModal.js","components/TaskContainer.js","components/MainContainer.js","App.js","index.js"],"names":["Time","createContext","TimeContextProvider","props","useState","time","setTime","useEffect","interval","setInterval","date","Date","h","getHours","m","getMinutes","s","getSeconds","session","today","toLocaleDateString","weekday","year","month","day","clearInterval","Provider","value","children","Modal","setAppElement","AddProjectModal","name","setName","isOpen","onRequestClose","className","onSubmit","event","handleAdd","type","onChange","target","required","maxlength","id","HelpModal","href","title","class","modalReducer","state","action","map","project","Object","assign","display","ModalContext","ModalContextProvider","useReducer","modals","dispatch","dataReducer","projects","tasks","projectList","displayedProject","setTaskId","uuidv4","columns","todoIds","columnOrder","setTodoId","columnname","todos","desc","selectedTask","ids","selected","newColumn","newStart","newFinish","newColumnOrder","colId","rename","columnid","newTodos","newTasks","newProjects","newColumns","newProjectList","theme","DataContext","DataContextProvider","localData","localStorage","getItem","JSON","parse","items","itemDispatch","setItem","stringify","Header","useContext","setSelected","handleModal","modal","handleChange","document","getElementById","setAttribute","keys","length","i","onClick","swal","buttons","yes","text","cancel","then","itemCopy","toString","filter","e","forEach","column","checked","for","preventDefault","TodoItem","getStyle","style","snapshot","background","draggableId","task","index","provided","draggableProps","ref","innerRef","isDragging","dragHandleProps","todoId","key","reduce","result","current","item","console","log","handleRemove","AddTodoModal","setDesc","passTodo","TaskContainer","setId","handleAddTodo","handleRemoveTask","order","transition","borderRadius","onMouseDown","prompt","handleEdit","droppableId","direction","droppableProps","isDraggingOver","placeholder","MainContainer","handleKeyPress","click","onDragEnd","destination","source","Array","from","splice","start","finish","startTodoIds","finishTodoIds","newTaskIds","columnId","todoid","onKeyPress","handleAddTask","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.010352bf.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\n\r\nexport const Time = createContext();\r\n\r\nconst TimeContextProvider = (props) => {\r\n    const [time, setTime] = useState('');\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(\r\n          () => {\r\n            var date = new Date();\r\n            var h = date.getHours(); \r\n            var m = date.getMinutes();\r\n            var s = date.getSeconds();\r\n            var session = \"AM\";\r\n            var options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' };\r\n            let today = new Date().toLocaleDateString(\"en-US\", options);\r\n            if(h == 0){\r\n                h = 12;\r\n                }\r\n            \r\n                if(h > 12){\r\n                h = h - 12;\r\n                session = \"PM\";\r\n                }\r\n                h = (h < 10) ? \"0\" + h : h;\r\n            m = (m < 10) ? \"0\" + m : m;\r\n            s = (s < 10) ? \"0\" + s : s;\r\n            var time = today + \" \" + h + \":\" + m + \":\" + s + \" \" + session;\r\n            setTime(time);\r\n          }\r\n          ,\r\n          1000\r\n        );\r\n     \r\n        return () => {\r\n          clearInterval(interval);\r\n        }\r\n      }, []);\r\n    return ( \r\n        <Time.Provider value={{time}}>\r\n            {props.children}\r\n        </Time.Provider>\r\n     );\r\n}\r\n \r\nexport default TimeContextProvider;","import React, {useState} from 'react';\r\nimport Modal from 'react-modal';\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\nconst AddProjectModal = (props) => {\r\n    const [name, setName] = useState('');\r\n\r\n    const handleNameChange = (event) =>{\r\n        setName(event.target.value);\r\n    }\r\n    return ( \r\n        <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={props.onRequestClose}\r\n        className=\"addprojectmodal\"\r\n        >\r\n            <h1>Add New Project</h1>\r\n                <form onSubmit={(event) => {props.handleAdd(event,name); setName('');}}>\r\n                <div>\r\n                <label>Project Name:</label>\r\n                <input type=\"text\" value={name} name=\"name\" onChange={handleNameChange} required maxlength=\"15\"/>\r\n                </div>\r\n                <button type=\"submit\"><i className='bx bx-chevron-right-square ' id=\"addlogo\"></i>Add Project</button>\r\n                </form>\r\n        </Modal>\r\n     );\r\n}\r\nexport default AddProjectModal;","import React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst HelpModal = (props) => {\r\n    return ( \r\n        <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={props.onRequestClose}\r\n        className=\"addtaskmodal\"\r\n        >\r\n            <h1>About</h1>\r\n            <h2>Created by: John Andre (SizzlingSeal) Andrade</h2>\r\n            <div>\r\n            <div className=\"helpmodal\">\r\n           <label>Personal Github: <a href=\"https://github.com/SizzlingSeal\" target=\"_blank\" title=\"Github Account\"><i class='bx bxl-github'></i></a></label>\r\n           </div>\r\n           <div className=\"helpmodal\">\r\n           <label>Source Code: <a href=\"https://github.com/SizzlingSeal/trello-clone\" target=\"_blank\" title=\"Source Code\"><i className='bx bx-code-block' id=\"edit\" title=\"Source Code\"></i></a></label>\r\n           </div>\r\n           </div>\r\n        </Modal>\r\n     );\r\n}\r\nexport default HelpModal;","\r\n\r\nexport const modalReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'SHOW_MODAL':\r\n            var newState = state.map(project => {\r\n                if(project.id === action.id)\r\n                return Object.assign({}, project, {display:!project.display});\r\n                return project;\r\n            });\r\n            return newState;  \r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport {modalReducer} from '../reducer/ModalReducer';\r\n\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalContextProvider = (props) =>{\r\n    const [modals, dispatch] = useReducer(modalReducer,[\r\n        {\r\n            id:'addmodal',\r\n            display:false\r\n        },\r\n        {\r\n            id:'helpmodal',\r\n            display:false\r\n        },\r\n        {\r\n            id:'detailsmodal',\r\n            display:false\r\n        },\r\n        {\r\n            id:'addtodomodal',\r\n            display:false\r\n        }\r\n\r\n    ]);\r\n\r\n\r\n    return(\r\n        <ModalContext.Provider value={{modals,dispatch}}>\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ModalContextProvider;\r\n\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const dataReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'ADD_PROJECT':\r\n           return {...state, projects:{...state.projects, [action.name]: {\r\n            id:action.name,\r\n            title:action.name,\r\n            tasks:[]\r\n           }}, projectList:[...state.projectList, action.name],\r\n            displayedProject: action.name}\r\n            \r\n        case 'ADD_TASK':\r\n           const project = action.project;\r\n           const setTaskId = uuidv4();\r\n            return {...state, \r\n                projects:{...state.projects, [project]: {\r\n                ...state.projects[project], tasks:[...state.projects[project].tasks, setTaskId]}},\r\n                \r\n                columns:{ ...state.columns,\r\n                    [setTaskId]: {\r\n                        id: setTaskId,\r\n                        name: action.name,\r\n                        todoIds:[]\r\n                    }},\r\n                    columnOrder:[...state.columnOrder, setTaskId]\r\n                    } \r\n        case 'ADD_TODO':\r\n            const setTodoId = uuidv4();\r\n                    return {...state, columns:{...state.columns,\r\n                    [action.columnname] :{\r\n                        ...state.columns[action.columnname],\r\n                        todoIds:[...state.columns[action.columnname].todoIds, setTodoId]\r\n                    }},\r\n                    todos: {...state.todos, [setTodoId]: {\r\n                        id: setTodoId,\r\n                        name: action.name,\r\n                        desc: action.desc\r\n                    }}}            \r\n        case 'CHANGE_SELECTED_TASK':\r\n            return{...state, selectedTask: action.ids}\r\n            \r\n        case 'CHANGE_PROJECT':\r\n        return{...state, columnOrder:[...state.projects[action.selected].tasks],\r\n        displayedProject:action.selected}\r\n\r\n        case 'CHANGE_ORDER_TODO_SAME':\r\n            return {...state, columns:{...state.columns, [action.newColumn.id]: action.newColumn}}\r\n        \r\n        case 'CHANGE_ORDER_TODO':\r\n            return{...state, \r\n                columns: {...state.columns, \r\n                [action.newStart.id]: action.newStart, \r\n                [action.newFinish.id]: action.newFinish,\r\n            }}\r\n\r\n        case 'CHANGE_ORDER_TASK':\r\n            return {...state,  projects:{...state.projects, [state.displayedProject]: {...state.projects[state.displayedProject], tasks: action.newColumnOrder}},\r\n             columnOrder: action.newColumnOrder}\r\n\r\n        case 'CHANGE_COLUMN_NAME':\r\n            return {...state, columns:{...state.columns, [action.colId]: {...state.columns[action.colId], name: action.rename} }}\r\n\r\n        case 'REMOVE_TODO':\r\n            return{\r\n                ...state,\r\n                columns: {\r\n                    ...state.columns,\r\n                    [action.columnid]: {\r\n                        ...state.columns[action.columnid],\r\n                        todoIds:action.newColumn,\r\n                    },\r\n                },\r\n                todos:action.newTodos\r\n            }\r\n\r\n        case 'REMOVE_TASK':\r\n            return{\r\n                ...state,\r\n                projects: {...state.projects, [action.project] : {...state.projects[action.project], tasks: action.newTasks}},\r\n                columns: action.newColumn,\r\n                todos: action.newTodos,\r\n                columnOrder: action.newColumnOrder,\r\n            }\r\n        case 'REMOVE_PROJECT':\r\n            return {\r\n                ...state,\r\n                projects: action.newProjects,\r\n                columns: action.newColumns,\r\n                todos: action.newTodos,\r\n                columnOrder:[],\r\n                projectList: action.newProjectList,\r\n\r\n            }\r\n\r\n        case 'CHANGE_THEME':\r\n            return{\r\n                ...state,\r\n                theme: action.theme\r\n            }\r\n\r\n    }\r\n}","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport {dataReducer} from '../reducer/DataReducer';\r\n\r\nexport const DataContext = createContext();\r\n\r\nconst DataContextProvider = (props) =>{\r\n    const [items, itemDispatch] = useReducer(dataReducer, {\r\n        projects:{},\r\n        columns:{},\r\n        todos:{},\r\n        columnOrder:[],\r\n        projectList:[],\r\n        displayedProject: '',\r\n        selectedTask: '',\r\n        theme: 'light',\r\n    }, () => {\r\n        const localData = localStorage.getItem('items');\r\n        return localData ? JSON.parse(localData) :\r\n        {\r\n            projects:{},\r\n            columns:{},\r\n            todos:{},\r\n            columnOrder:[],\r\n            projectList:[],\r\n            displayedProject: '',\r\n            selectedTask: '',\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('items', JSON.stringify(items))\r\n    }, [items])\r\n\r\n    return(\r\n        <DataContext.Provider value={{items, itemDispatch}}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\nexport default DataContextProvider;\r\n","import React, {useContext, useState} from 'react';\r\nimport {Time} from '../contexts/Time';\r\nimport AddProjectModal from './modals/AddProjectModal';\r\nimport HelpModal from './modals/HelpModal';\r\nimport {ModalContext} from '../contexts/ModalContext';\r\nimport {DataContext} from '../contexts/DataContext';\r\nimport swal from 'sweetalert';\r\n\r\nconst Header = () => {\r\n    const {time} = useContext(Time);\r\n    const {modals,dispatch} = useContext(ModalContext);\r\n    const {items, itemDispatch} = useContext(DataContext);\r\n    const [selected, setSelected] = useState('');\r\n    document.getElementById('base').setAttribute('data-theme', items.theme);\r\n   \r\n    function handleModal(modal){\r\n        return  () => dispatch({type: 'SHOW_MODAL', id:modal})\r\n    }\r\n\r\n    function handleAdd(event,name){\r\n        itemDispatch({type:'ADD_PROJECT', name});\r\n        dispatch({type: 'SHOW_MODAL', id:'addmodal'});\r\n        handleChange(name);\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleChange(selected){\r\n        setSelected(selected);     \r\n        itemDispatch({type:'CHANGE_PROJECT', selected});\r\n    }\r\n\r\n    function handleDeleteProject(){\r\n        swal(\"Are you sure you want to delete this project?\", \"\", \"warning\", {\r\n            buttons: {\r\n              \r\n              yes:{\r\n                  text:\"Yes\",\r\n                  value:'Yes'\r\n              },\r\n              cancel: \"No\",\r\n            },\r\n          })\r\n          .then((value) => {\r\n            switch (value) {\r\n           \r\n              case 'Yes':\r\n                const itemCopy = {...items};\r\n                const project =  document.getElementById(\"projects\").value.toString();\r\n                const newProjectList = items.projectList.filter(e => e !== project);\r\n                const {tasks} =itemCopy.projects[project];\r\n                if(tasks.length > 0){//getting column in projects and deleting in columns\r\n                 tasks.forEach(column => {\r\n                     const {todoIds} = itemCopy.columns[column];\r\n                     \r\n                     if(todoIds.length > 0 ){\r\n                         todoIds.forEach(id => {\r\n                             delete itemCopy.todos[id]//delete all todos\r\n                         });\r\n                     };\r\n                     delete itemCopy.columns[column]\r\n                 });\r\n               };\r\n               delete itemCopy.projects[project];//final step delete the project\r\n               let newColumns = itemCopy.columns;\r\n               let newTodos = itemCopy.todos;\r\n               let newProjects = itemCopy.projects;\r\n               itemDispatch({type: 'REMOVE_PROJECT',  newProjectList, newColumns, newTodos, newProjects});\r\n               if(items.projectList.length >= 2  ){\r\n                   handleChange(document.getElementById('projects').value);\r\n               } else{\r\n                   swal(\"Warning\", \"No more projects left.\", \"warning\")\r\n               }\r\n                break;\r\n           \r\n              default:\r\n                  swal(\"Project not deleted\");\r\n                break;\r\n           \r\n            }\r\n          });\r\n\r\n\r\n        \r\n       \r\n    }\r\n    function toggleTheme(){\r\n     if(document.getElementById('switch').checked === true){\r\n        itemDispatch({type:'CHANGE_THEME', theme:'dark'});\r\n     }else{\r\n        itemDispatch({type:'CHANGE_THEME', theme:'light'});\r\n     }  \r\n    }\r\n    \r\n    return ( \r\n        <header>\r\n            <div className=\"organizer\">\r\n            <select name=\"projects\" id=\"projects\" onChange={(event) => handleChange(event.target.value)} value={items.displayedProject}>\r\n              {Object.keys(items.projects).length !== 0 ? \r\n              Object.keys(items.projects).map(i => {return <option key={i} value={i}>{i}</option>})\r\n              : <option>Create new project</option> }\r\n            </select>\r\n            <i className='bx bx-book-add bx-tada-hover' id=\"add\" \r\n            onClick={handleModal('addmodal')} title=\"Add Project\"></i>\r\n            {Object.keys(items.projects).length !== 0 &&  <i className='bx bx-trash-alt bx-tada-hover' id=\"trashproject\" onClick={handleDeleteProject}></i>}\r\n            </div>\r\n            <div className=\"title\">\r\n            <a>Project To Note</a>\r\n            </div>\r\n            <div className=\"information\">\r\n            <input type=\"checkbox\" id=\"switch\" onChange={toggleTheme} checked={items.theme === 'dark' ? true : false} /><label for=\"switch\">Toggle</label>\r\n            <i className='bx bxs-help-circle' id=\"help\"\r\n            onClick={handleModal('helpmodal')} title=\"About\"></i>\r\n            <a>{time}</a>\r\n            </div>\r\n            <AddProjectModal isOpen={modals[0].display} onRequestClose={handleModal('addmodal')} handleAdd={handleAdd}/>\r\n            <HelpModal isOpen={modals[1].display} onRequestClose={handleModal('helpmodal')}/>     \r\n        </header>\r\n     );\r\n}\r\nexport default Header;","\r\nimport React, {useContext, useState} from 'react';\r\nimport {DataContext} from '../contexts/DataContext';\r\nimport {Draggable} from 'react-beautiful-dnd';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst TodoItem = (props) => {\r\n    const {items, itemDispatch} = useContext(DataContext);\r\n    const [id, setId] = useState(props.columnname.id);\r\n\r\n    function handleRemove(todoId){\r\n    let  newTodos = Object.keys(items.todos)\r\n    .filter(key => key !== todoId)\r\n    .reduce((result, current) => {\r\n    result[current] = items.todos[current];\r\n    return result;\r\n    }, {});\r\n    let columnid = id;\r\n    let newColumn = items.columns[columnid].todoIds.filter(item => item !== todoId);\r\n    console.log(newColumn);\r\n    itemDispatch({type:'REMOVE_TODO', newTodos, columnid, newColumn})\r\n    }\r\n    \r\n    function getStyle(style, snapshot){\r\n        return  snapshot ?  {\r\n            ...style,\r\n            background: `#1877f2`,\r\n          } :  style;\r\n          \r\n    }\r\n    function handleDesc(){\r\n        swal(props.task.name, props.task.desc, \"info\");\r\n    }\r\n\r\n\r\n    return ( \r\n        <Draggable draggableId={props.task.id} index={props.index}>\r\n            {(provided, snapshot) => (\r\n                <div className=\"todo-item\"\r\n                {...provided.draggableProps}\r\n                ref={provided.innerRef}\r\n                isDragging={snapshot.isDragging}\r\n                style={getStyle(provided.draggableProps.style, snapshot.isDragging)}\r\n                >\r\n                <i className='bx bx-grid-vertical' id=\"dragicon\" title=\"Drag\" {...provided.dragHandleProps}></i>\r\n                <div>\r\n                <h4  className={props.columnname.id} onClick={() => handleDesc()}>{props.task.name}</h4>\r\n                </div>\r\n                <div>\r\n\r\n                <i className='bx bx-task-x bx-tada-hover' id=\"deletetask\" title=\"Remove Task\" onClick={() => handleRemove(props.task.id)}></i>\r\n                </div>\r\n                </div>\r\n            )}\r\n\r\n        </Draggable>\r\n     );\r\n}\r\nexport default TodoItem;","import React, {useState} from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst AddTodoModal = (props) => {\r\n    const [name, setName] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    \r\n    function handleNameChange(event){\r\n        setName(event.target.value);\r\n    }\r\n\r\n    function handleDescChange(event){\r\n        setDesc(event.target.value);\r\n    }\r\n\r\n    return ( \r\n        <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={props.onRequestClose}\r\n        className=\"addtaskmodal\">\r\n        <h1>Add Task</h1>\r\n        <form onSubmit={(event) => {props.passTodo(event,name,desc); setName(''); setDesc(''); }}>\r\n        <div>\r\n        <label>Task Name:</label>\r\n        <input type=\"text\" onChange={handleNameChange} required maxlength=\"25\"/>\r\n        </div>\r\n        <div>\r\n        <label>Task Description:</label>\r\n        <textarea required onChange={handleDescChange}>\r\n        </textarea>\r\n        </div>\r\n        <button>Add task</button>\r\n        </form>\r\n        </Modal>\r\n     );\r\n}\r\nexport default AddTodoModal;","import React, {useContext, useState} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport AddTodoModal from './modals/AddTodoModal';\r\nimport {ModalContext} from '../contexts/ModalContext';\r\nimport {DataContext} from '../contexts/DataContext';\r\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\r\nimport swal from 'sweetalert';\r\n\r\nconst TaskContainer = (props) => {\r\n    const {modals,dispatch} = useContext(ModalContext);\r\n    const {items, itemDispatch} = useContext(DataContext);\r\n    const [id, setId] = useState('');\r\n    \r\n    console.log(props.index)\r\n\r\n    function handleModal(modal){\r\n        return  () => dispatch({type: 'SHOW_MODAL', id:modal})\r\n    }\r\n\r\n    function passTodo(event,name, desc){\r\n        const columnId = items.selectedTask;\r\n        handleAddTodo(event,name, desc, columnId);\r\n    }\r\n\r\n    function handleChange(){\r\n        const ids = id;\r\n        itemDispatch({type: 'CHANGE_SELECTED_TASK', ids})\r\n    }\r\n\r\n    function handleAddTodo(event,name,desc, columnname){\r\n        itemDispatch({type: 'ADD_TODO', name, desc, columnname });\r\n        dispatch({type: 'SHOW_MODAL', id:'addtodomodal'});\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleRemoveTask(){\r\n        swal(\"Are you sure you want to delete this task?\", \"\", \"warning\", {\r\n            buttons: {\r\n              \r\n              yes:{\r\n                  text:\"Yes\",\r\n                  value:'Yes'\r\n              },\r\n              cancel: \"No\",\r\n            },\r\n          } )\r\n          .then((value) => {\r\n            switch (value) {\r\n           \r\n              case 'Yes':\r\n                const colId = id;\r\n            const project = document.getElementById('projects').value.toString();\r\n            let  newColumn = Object.keys(items.columns)\r\n            .filter(key => key !== colId)\r\n            .reduce((result, current) => {\r\n            result[current] = items.columns[current];\r\n            return result;\r\n            }, {});\r\n            let newColumnOrder = items.columnOrder.filter(order => order !== colId);\r\n            let newTasks = items.projects[project].tasks.filter(task => task !== colId);\r\n            const itemCopy = items;\r\n            const {todoIds} =itemCopy.columns[id];\r\n            if(todoIds.length > 0){\r\n            todoIds.forEach(id => {\r\n                delete itemCopy.todos[id]\r\n            });\r\n            };\r\n            delete itemCopy.columns[id]\r\n            let newTodos = itemCopy.todos;\r\n            itemDispatch({type:'REMOVE_TASK', newColumn, newColumnOrder, project, newTasks, newTodos});\r\n                break;\r\n           \r\n              default:\r\n                  swal(\"Task not deleted\");\r\n                break;\r\n           \r\n            }\r\n          });\r\n\r\n\r\n\r\n            \r\n   \r\n    }\r\n\r\n    function handlePressDown(){\r\n        setId(props.columnname.id);\r\n    }\r\n\r\n    function handleEdit(){\r\n        const colId = id;\r\n        var rename = prompt(\"Rename Task:\", props.columnname.name);\r\n        if(rename === null){\r\n            return;\r\n        }else{\r\n            itemDispatch({type:'CHANGE_COLUMN_NAME', rename, colId});\r\n        } \r\n    }\r\n    function getStyle(style, snapshot){\r\n        return  snapshot ?  {\r\n            ...style,\r\n            background: `#165cb8`,\r\n            transition: `background ease 0.5s`,\r\n            borderRadius: `5px`\r\n          } :  style;  \r\n    }\r\n\r\n    return ( \r\n        <Draggable key={props.columnname.id} draggableId={props.columnname.id} index={props.index} >\r\n            {provided => (\r\n        <div className=\"task-container\" onMouseDown={() => handlePressDown()}\r\n        {...provided.draggableProps}\r\n        ref={provided.innerRef}>\r\n            <div className=\"top\">\r\n            <div className=\"dragicon\" {...provided.dragHandleProps}></div>\r\n            <div>\r\n            <p style={{display: \"inline-block\"}} >{props.columnname.name} </p>\r\n            <i className='bx bx-edit bx-tada-hover' id=\"edit\" onClick={() => handleEdit()}></i>\r\n            </div>\r\n            <i className='bx bx-add-to-queue bx-tada-hover' id=\"add\" onClick={() => {handleChange(); dispatch({type: 'SHOW_MODAL', id:'addtodomodal'});}}></i>\r\n            <i className='bx bx-trash bx-tada-hover' id=\"remove\" value={props.columnname.id} onClick={ handleRemoveTask}></i>\r\n             </div>\r\n             <Droppable droppableId={props.columnname.id} type=\"task\" direction=\"vertical\">\r\n                 {(provided, snapshot) => (\r\n                     <div className=\"todo-container\"\r\n                     ref={provided.innerRef}\r\n                     {...provided.droppableProps}\r\n                     isDraggingOver={snapshot.isDraggingOver}\r\n                     style={getStyle(provided.droppableProps.style, snapshot.isDraggingOver)}>\r\n                    {props.task.map((task,index) => (\r\n                        <TodoItem key={task.id} task={task} index={index} columnname={props.columnname}/>\r\n                    ))}\r\n                    {provided.placeholder}\r\n                    </div>\r\n                 )}\r\n            </Droppable>\r\n            <AddTodoModal isOpen={modals[3].display} onRequestClose={handleModal('addtodomodal')} passTodo={passTodo}/>\r\n        </div>\r\n         )}\r\n        </Draggable>\r\n     );\r\n}\r\nexport default TaskContainer;","import React, {useContext, useState} from 'react';\r\nimport {DataContext} from '../contexts/DataContext';\r\nimport TaskContainer from './TaskContainer';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport swal from 'sweetalert';\r\n\r\nconst MainContainer = () => {\r\n    const {items, itemDispatch} = useContext(DataContext);\r\n    const [name, setName] = useState('');\r\n\r\n    function handleAddTask(name, project){\r\n        if(name.length === 0 ){\r\n            swal(\"Enter Task Name!\", \"Missing Input\" , \"error\" );\r\n        }else{\r\n        setName('');\r\n        itemDispatch({type:'ADD_TASK', name, project});\r\n    }\r\n    }\r\n    \r\n    function handleChange(event){\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const onDragEnd = result => {\r\n        const{destination, source, draggableId, type} = result;\r\n\r\n        if(!destination){\r\n            return;\r\n        }\r\n        if(destination.droppableId === source.droppableId && \r\n            destination.index === source.index){ \r\n                return;\r\n        }\r\n\r\n        if(type === 'column'){\r\n            const newColumnOrder = Array.from(items.columnOrder);\r\n            newColumnOrder.splice(source.index, 1);\r\n            newColumnOrder.splice(destination.index, 0 , draggableId);\r\n            itemDispatch({type:'CHANGE_ORDER_TASK', newColumnOrder});\r\n            return;\r\n            \r\n        }\r\n\r\n        const start = items.columns[source.droppableId];\r\n        const finish = items.columns[destination.droppableId];\r\n\r\n        if(start === finish){\r\n            const newTaskIds = Array.from(start.todoIds);\r\n            newTaskIds.splice(source.index, 1);\r\n            newTaskIds.splice(destination.index, 0, draggableId);\r\n            \r\n            const newColumn ={\r\n                ...start,\r\n                todoIds: newTaskIds,\r\n            };\r\n            itemDispatch({type:'CHANGE_ORDER_TODO_SAME', newColumn});\r\n            return;    \r\n        }\r\n\r\n        //moving from one list to another\r\n        const startTodoIds = Array.from(start.todoIds);\r\n        startTodoIds.splice(source.index, 1);\r\n        const newStart ={\r\n            ...start,\r\n            todoIds: startTodoIds,\r\n        };\r\n\r\n        const finishTodoIds = Array.from(finish.todoIds);\r\n        finishTodoIds.splice(destination.index, 0, draggableId);\r\n        const newFinish={\r\n            ...finish,\r\n            todoIds: finishTodoIds,\r\n        };\r\n\r\n        itemDispatch({type:'CHANGE_ORDER_TODO', newStart, newFinish});\r\n\r\n    }\r\n    const handleKeyPress = (event) => {\r\n        if(event.key === 'Enter'){\r\n          document.getElementById(\"addnewtask\").click();\r\n        }\r\n      }\r\n\r\n    return ( \r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable \r\n            droppableId=\"all-column\"\r\n            direction=\"horizontal\" \r\n            type=\"column\">\r\n                {provided => (   \r\n        <div className=\"main-container\" \r\n        {...provided.droppableProps}\r\n        ref={provided.innerRef}>\r\n            {items.columnOrder.map((columnId, index) => {   \r\n                 const column = items.columns[columnId];\r\n                 const task = column.todoIds.map(todoid => items.todos[todoid]);\r\n                \r\n                 return <TaskContainer task={task} columnname={column} index={index}/>\r\n             })}\r\n            {Object.keys(items.projects).length !== 0 && \r\n            <div className=\"addtask\"> \r\n            <input type=\"text\" onChange={handleChange} value={name} onKeyPress={handleKeyPress} placeholder=\"Enter Task Name\"/>\r\n            <button onClick={() => handleAddTask(name, items.displayedProject)} id=\"addnewtask\">Add new Task</button>\r\n             </div>}\r\n             {provided.placeholder}\r\n        </div>\r\n        )}\r\n        </Droppable>\r\n        </DragDropContext>\r\n     );\r\n}\r\nexport default MainContainer;","import Header from \"./components/Header\";\nimport MainContainer from \"./components/MainContainer\";\nimport ModalContextProvider from \"./contexts/ModalContext\";\nimport TimeContextProvider from \"./contexts/Time\";\nimport DataContextProvider from './contexts/DataContext';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DataContextProvider>\n      <ModalContextProvider>\n      <TimeContextProvider>\n      <Header/>\n      <MainContainer/>\n      </TimeContextProvider>\n      </ModalContextProvider>\n      </DataContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}